version: '3.8'
services:
  db:
    container_name: fullstack_pg_container
    image: postgres
    restart: always
    volumes:
            - capybaradbdata:/var/lib/postgresql/data
            - ./capybara-database/sql-scripts/container-backup.sql:/docker-entrypoint-initdb.d/create_tables.sql
    environment:
      POSTGRES_USER: capy
      POSTGRES_PASSWORD: capy
      POSTGRES_DB: capybara_db
    healthcheck:
      test: "exit 0"
    ports:
      - "5432:5432"
  pgadmin:
    container_name: fullstack_pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: capybara@admin.com
      PGADMIN_DEFAULT_PASSWORD: capy
    ports:
      - "5050:80"
  backend:
    container_name: fullstack_backend_container
    image: capybaracapstone/capybara-backend-docker
    restart: always
    ports:
      - "8090:8090"

# Do not touch for now
#  ors-app:
#    container_name: fullstack_ors_app
#    ports:
#      - 9090:8080
#      - 9001:9001
#    image: openrouteservice/openrouteservice:latest
#    build:
#      context: ../
#      args:
#        ORS_CONFIG: ./openrouteservice/src/main/resources/ors-config-sample.json
#        OSM_FILE: ./openrouteservice/src/main/files/heidelberg.osm.gz
#    user: "${ORS_UID:-0}:${ORS_GID:-0}"
#    volumes:
#      - ./MapService/graphs:/ors-core/data/graphs
#      - ./MapService/elevation_cache:/ors-core/data/elevation_cache
#      - ./MapService/logs/ors:/var/log/ors
#      - ./MapService/logs/tomcat:/usr/local/tomcat/logs
#      - ./MapService/conf:/ors-conf
#      - ./MapService/missouri.pbf:/ors-core/data/osm_file.pbf
#    environment:
#      - BUILD_GRAPHS=False  # Forces the container to rebuild the graphs, e.g. when PBF is changed
#      - "JAVA_OPTS=-Djava.awt.headless=true -server -XX:TargetSurvivorRatio=75 -XX:SurvivorRatio=64 -XX:MaxTenuringThreshold=3 -XX:+UseG1GC -XX:+ScavengeBeforeFullGC -XX:ParallelGCThreads=4 -Xms1g -Xmx2g"
#      - "CATALINA_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9001 -Dcom.sun.management.jmxremote.rmi.port=9001 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost"
#------------------
volumes:
        capybaradbdata:
                driver: local
networks:
  default:
    name: docker-capybara-network